# Generated by Django 4.0.4 on 2022-04-13 08:50

from django.conf import settings
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email address')),
                ('slug', models.SlugField(blank=True, max_length=250, unique=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Creditor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=250, unique=True, verbose_name='name')),
                ('amount_owned', models.DecimalField(decimal_places=3, max_digits=11, verbose_name='amount_owned')),
                ('date_due', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date_due')),
                ('bank_code', models.CharField(choices=[('044', 'Access Bank'), ('063', 'Access Bank Diamond'), ('035A', 'Alat By Wema'), ('565', 'Carbon'), ('023', 'Citibank Nigeria'), ('050', 'Ecobank Nigeria'), ('50126', 'Eyowo'), ('070', 'Fidelity Bank'), ('011', 'First Bank Of Nigeria'), ('214', 'First City Monument Bank'), ('00103', 'Globus Bank'), ('100022', 'Gomoney'), ('058', 'Guaranty Trust Bank'), ('030', 'Heritage Bank'), ('301', 'Jaiz Bank'), ('082', 'Keystone Bank'), ('50211', 'Kuda Bank'), ('100002', 'Paga'), ('999991', 'Palmpay'), ('526', 'Parallex Bank'), ('999992', 'Paycom'), ('076', 'Polaris Bank'), ('101', 'Providus Bank'), ('502', 'Rand Merchant Bank'), ('125', 'Rubies Mfb'), ('221', 'Stanbic Ibtc Bank'), ('068', 'Standard Chartered Bank'), ('232', 'Sterling Bank'), ('100', 'Suntrust Bank'), ('102', 'Titan Bank'), ('032', 'Union Bank Of Nigeria'), ('033', 'United Bank For Africa'), ('215', 'Unity Bank'), ('566', 'Vfd Microfinance Bank Limited'), ('035', 'Wema Bank'), ('057', 'Zenith Bank')], max_length=6, verbose_name='bank_code')),
                ('account_number', models.CharField(max_length=10, verbose_name='account_number')),
                ('recipient_code', models.CharField(max_length=40, null=True, verbose_name='recipient_code')),
                ('status', models.CharField(choices=[('paid', 'Paid'), ('unpaid', 'Unpaid')], default='unpaid', max_length=40, verbose_name='status')),
            ],
            options={
                'ordering': ('-updated_at', '-created_at'),
                'get_latest_by': 'updated_at',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Wallet',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('currency', models.CharField(default='NGN', max_length=50, verbose_name='currency')),
                ('user', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('-updated_at', '-created_at'),
                'get_latest_by': 'updated_at',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='WalletTransaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('amount', models.DecimalField(decimal_places=3, max_digits=11, verbose_name='amount')),
                ('narration', models.CharField(max_length=100, verbose_name='narration')),
                ('transaction_type', models.CharField(choices=[('deposit', 'Deposit'), ('credit', 'Credit')], max_length=100, verbose_name='transaction_type')),
                ('transaction_status', models.CharField(choices=[('INITIATED', 'Initiated'), ('PENDING', 'Pending'), ('SUCCESS', 'Success'), ('REVERSED', 'Reversed'), ('FAILED', 'Failed')], default='INITIATED', max_length=100, verbose_name='transaction_status')),
                ('paystack_reference', models.CharField(max_length=100, null=True, verbose_name='paystack_reference')),
                ('destination', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='destination', to='authentify.creditor')),
                ('wallet', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='transactions', to='authentify.wallet')),
            ],
            options={
                'ordering': ('-updated_at', '-created_at'),
                'get_latest_by': 'updated_at',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('firstname', models.CharField(max_length=250, verbose_name='firstname')),
                ('lastname', models.CharField(max_length=250, verbose_name='lastname')),
                ('gender', models.CharField(choices=[('male', 'Male'), ('female', 'Female')], max_length=250, verbose_name='gender')),
                ('phone_number', models.IntegerField(verbose_name='phone_number')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('-updated_at', '-created_at'),
                'get_latest_by': 'updated_at',
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='creditor',
            name='wallet',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='creditors', to='authentify.wallet'),
        ),
    ]
